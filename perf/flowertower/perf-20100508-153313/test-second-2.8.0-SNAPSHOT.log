hist(1,1,10000,false,100,1)  total_elapsed=63100134 nanos,  throughput=158478 ops/sec,  per_thread_latency=6310 nanos/op,  avg_arrival=6310 nanos/op
hist(1,1,10000,false,0,1)  total_elapsed=247619665 nanos,  throughput=40384 ops/sec,  per_thread_latency=24761 nanos/op,  avg_arrival=24761 nanos/op
hist(1,1,10000,false,50,1)  total_elapsed=83237085 nanos,  throughput=120138 ops/sec,  per_thread_latency=8323 nanos/op,  avg_arrival=8323 nanos/op
hist(1,1,10000,false,0,3)  total_elapsed=45336912 nanos,  throughput=220570 ops/sec,  per_thread_latency=4533 nanos/op,  avg_arrival=4533 nanos/op
hist(1,1,10000,false,50,3)  total_elapsed=36020434 nanos,  throughput=277620 ops/sec,  per_thread_latency=3602 nanos/op,  avg_arrival=3602 nanos/op
hist(1,1,10000,false,0,100)  total_elapsed=3144813 nanos,  throughput=3179839 ops/sec,  per_thread_latency=314 nanos/op,  avg_arrival=314 nanos/op
hist(1,1,10000,false,50,100)  total_elapsed=13414346 nanos,  throughput=745470 ops/sec,  per_thread_latency=1341 nanos/op,  avg_arrival=1341 nanos/op
hist(1,1,10000,true,100,1)  total_elapsed=81381790 nanos,  throughput=122877 ops/sec,  per_thread_latency=8138 nanos/op,  avg_arrival=8138 nanos/op
hist(1,1,10000,true,0,1)  total_elapsed=171792493 nanos,  throughput=58209 ops/sec,  per_thread_latency=17179 nanos/op,  avg_arrival=17179 nanos/op
hist(1,1,10000,true,50,1)  total_elapsed=16132707 nanos,  throughput=619858 ops/sec,  per_thread_latency=1613 nanos/op,  avg_arrival=1613 nanos/op
hist(1,1,10000,true,0,3)  total_elapsed=17207286 nanos,  throughput=581149 ops/sec,  per_thread_latency=1720 nanos/op,  avg_arrival=1720 nanos/op
hist(1,1,10000,true,50,3)  total_elapsed=5981417 nanos,  throughput=1671844 ops/sec,  per_thread_latency=598 nanos/op,  avg_arrival=598 nanos/op
hist(1,1,10000,true,0,100)  total_elapsed=6209101 nanos,  throughput=1610539 ops/sec,  per_thread_latency=620 nanos/op,  avg_arrival=620 nanos/op
hist(1,1,10000,true,50,100)  total_elapsed=1031835 nanos,  throughput=9691471 ops/sec,  per_thread_latency=103 nanos/op,  avg_arrival=103 nanos/op
hist(1,2,5000,false,100,1)  total_elapsed=2112559 nanos,  throughput=4733595 ops/sec,  per_thread_latency=422 nanos/op,  avg_arrival=211 nanos/op
hist(1,2,5000,false,0,1)  total_elapsed=24995948 nanos,  throughput=400064 ops/sec,  per_thread_latency=4999 nanos/op,  avg_arrival=2499 nanos/op
hist(1,2,5000,false,50,1)  total_elapsed=62608103 nanos,  throughput=159723 ops/sec,  per_thread_latency=12521 nanos/op,  avg_arrival=6260 nanos/op
hist(1,2,5000,false,0,3)  total_elapsed=24183662 nanos,  throughput=413502 ops/sec,  per_thread_latency=4836 nanos/op,  avg_arrival=2418 nanos/op
hist(1,2,5000,false,50,3)  total_elapsed=14318512 nanos,  throughput=698396 ops/sec,  per_thread_latency=2863 nanos/op,  avg_arrival=1431 nanos/op
hist(1,2,5000,false,0,100)  total_elapsed=10156040 nanos,  throughput=984635 ops/sec,  per_thread_latency=2031 nanos/op,  avg_arrival=1015 nanos/op
hist(1,2,5000,false,50,100)  total_elapsed=1627722 nanos,  throughput=6143555 ops/sec,  per_thread_latency=325 nanos/op,  avg_arrival=162 nanos/op
hist(1,2,5000,true,100,1)  total_elapsed=2240999 nanos,  throughput=4462295 ops/sec,  per_thread_latency=448 nanos/op,  avg_arrival=224 nanos/op
hist(1,2,5000,true,0,1)  total_elapsed=22340552 nanos,  throughput=447616 ops/sec,  per_thread_latency=4468 nanos/op,  avg_arrival=2234 nanos/op
hist(1,2,5000,true,50,1)  total_elapsed=16876308 nanos,  throughput=592546 ops/sec,  per_thread_latency=3375 nanos/op,  avg_arrival=1687 nanos/op
hist(1,2,5000,true,0,3)  total_elapsed=10450701 nanos,  throughput=956873 ops/sec,  per_thread_latency=2090 nanos/op,  avg_arrival=1045 nanos/op
hist(1,2,5000,true,50,3)  total_elapsed=5994687 nanos,  throughput=1668143 ops/sec,  per_thread_latency=1198 nanos/op,  avg_arrival=599 nanos/op
hist(1,2,5000,true,0,100)  total_elapsed=10201158 nanos,  throughput=980280 ops/sec,  per_thread_latency=2040 nanos/op,  avg_arrival=1020 nanos/op
hist(1,2,5000,true,50,100)  total_elapsed=1019334 nanos,  throughput=9810327 ops/sec,  per_thread_latency=203 nanos/op,  avg_arrival=101 nanos/op
hist(1,4,2500,false,100,1)  total_elapsed=1611727 nanos,  throughput=6204524 ops/sec,  per_thread_latency=644 nanos/op,  avg_arrival=161 nanos/op
hist(1,4,2500,false,0,1)  total_elapsed=19769276 nanos,  throughput=505835 ops/sec,  per_thread_latency=7907 nanos/op,  avg_arrival=1976 nanos/op
hist(1,4,2500,false,50,1)  total_elapsed=5012089 nanos,  throughput=1995176 ops/sec,  per_thread_latency=2004 nanos/op,  avg_arrival=501 nanos/op
hist(1,4,2500,false,0,3)  total_elapsed=3511819 nanos,  throughput=2847527 ops/sec,  per_thread_latency=1404 nanos/op,  avg_arrival=351 nanos/op
hist(1,4,2500,false,50,3)  total_elapsed=2277384 nanos,  throughput=4391003 ops/sec,  per_thread_latency=910 nanos/op,  avg_arrival=227 nanos/op
hist(1,4,2500,false,0,100)  total_elapsed=2499969 nanos,  throughput=4000049 ops/sec,  per_thread_latency=999 nanos/op,  avg_arrival=249 nanos/op
hist(1,4,2500,false,50,100)  total_elapsed=2620370 nanos,  throughput=3816254 ops/sec,  per_thread_latency=1048 nanos/op,  avg_arrival=262 nanos/op
hist(1,4,2500,true,100,1)  total_elapsed=2173670 nanos,  throughput=4600514 ops/sec,  per_thread_latency=869 nanos/op,  avg_arrival=217 nanos/op
hist(1,4,2500,true,0,1)  total_elapsed=15452031 nanos,  throughput=647164 ops/sec,  per_thread_latency=6180 nanos/op,  avg_arrival=1545 nanos/op
hist(1,4,2500,true,50,1)  total_elapsed=3949804 nanos,  throughput=2531771 ops/sec,  per_thread_latency=1579 nanos/op,  avg_arrival=394 nanos/op
hist(1,4,2500,true,0,3)  total_elapsed=2774515 nanos,  throughput=3604233 ops/sec,  per_thread_latency=1109 nanos/op,  avg_arrival=277 nanos/op
hist(1,4,2500,true,50,3)  total_elapsed=18088401 nanos,  throughput=552840 ops/sec,  per_thread_latency=7235 nanos/op,  avg_arrival=1808 nanos/op
hist(1,4,2500,true,0,100)  total_elapsed=12699730 nanos,  throughput=787418 ops/sec,  per_thread_latency=5079 nanos/op,  avg_arrival=1269 nanos/op
hist(1,4,2500,true,50,100)  total_elapsed=1079676 nanos,  throughput=9262037 ops/sec,  per_thread_latency=431 nanos/op,  avg_arrival=107 nanos/op
hist(30,1,10000,false,100,1)  total_elapsed=1608026 nanos,  throughput=6218804 ops/sec,  per_thread_latency=160 nanos/op,  avg_arrival=160 nanos/op
hist(30,1,10000,false,0,1)  total_elapsed=5112174 nanos,  throughput=1956114 ops/sec,  per_thread_latency=511 nanos/op,  avg_arrival=511 nanos/op
hist(30,1,10000,false,50,1)  total_elapsed=3526915 nanos,  throughput=2835339 ops/sec,  per_thread_latency=352 nanos/op,  avg_arrival=352 nanos/op
hist(30,1,10000,false,0,3)  total_elapsed=2802242 nanos,  throughput=3568571 ops/sec,  per_thread_latency=280 nanos/op,  avg_arrival=280 nanos/op
hist(30,1,10000,false,50,3)  total_elapsed=2517289 nanos,  throughput=3972527 ops/sec,  per_thread_latency=251 nanos/op,  avg_arrival=251 nanos/op
hist(30,1,10000,false,0,100)  total_elapsed=2277804 nanos,  throughput=4390193 ops/sec,  per_thread_latency=227 nanos/op,  avg_arrival=227 nanos/op
hist(30,1,10000,false,50,100)  total_elapsed=2317473 nanos,  throughput=4315044 ops/sec,  per_thread_latency=231 nanos/op,  avg_arrival=231 nanos/op
hist(30,1,10000,true,100,1)  total_elapsed=1881733 nanos,  throughput=5314250 ops/sec,  per_thread_latency=188 nanos/op,  avg_arrival=188 nanos/op
hist(30,1,10000,true,0,1)  total_elapsed=5773360 nanos,  throughput=1732093 ops/sec,  per_thread_latency=577 nanos/op,  avg_arrival=577 nanos/op
hist(30,1,10000,true,50,1)  total_elapsed=3796993 nanos,  throughput=2633663 ops/sec,  per_thread_latency=379 nanos/op,  avg_arrival=379 nanos/op
hist(30,1,10000,true,0,3)  total_elapsed=3272343 nanos,  throughput=3055914 ops/sec,  per_thread_latency=327 nanos/op,  avg_arrival=327 nanos/op
hist(30,1,10000,true,50,3)  total_elapsed=3005829 nanos,  throughput=3326869 ops/sec,  per_thread_latency=300 nanos/op,  avg_arrival=300 nanos/op
hist(30,1,10000,true,0,100)  total_elapsed=2672407 nanos,  throughput=3741944 ops/sec,  per_thread_latency=267 nanos/op,  avg_arrival=267 nanos/op
hist(30,1,10000,true,50,100)  total_elapsed=2763270 nanos,  throughput=3618900 ops/sec,  per_thread_latency=276 nanos/op,  avg_arrival=276 nanos/op
hist(30,2,5000,false,100,1)  total_elapsed=1484546 nanos,  throughput=6736066 ops/sec,  per_thread_latency=296 nanos/op,  avg_arrival=148 nanos/op
hist(30,2,5000,false,0,1)  total_elapsed=5459843 nanos,  throughput=1831554 ops/sec,  per_thread_latency=1091 nanos/op,  avg_arrival=545 nanos/op
hist(30,2,5000,false,50,1)  total_elapsed=3541930 nanos,  throughput=2823319 ops/sec,  per_thread_latency=708 nanos/op,  avg_arrival=354 nanos/op
hist(30,2,5000,false,0,3)  total_elapsed=3046127 nanos,  throughput=3282857 ops/sec,  per_thread_latency=609 nanos/op,  avg_arrival=304 nanos/op
hist(30,2,5000,false,50,3)  total_elapsed=2687564 nanos,  throughput=3720841 ops/sec,  per_thread_latency=537 nanos/op,  avg_arrival=268 nanos/op
hist(30,2,5000,false,0,100)  total_elapsed=1337950 nanos,  throughput=7474120 ops/sec,  per_thread_latency=267 nanos/op,  avg_arrival=133 nanos/op
hist(30,2,5000,false,50,100)  total_elapsed=1317975 nanos,  throughput=7587397 ops/sec,  per_thread_latency=263 nanos/op,  avg_arrival=131 nanos/op
hist(30,2,5000,true,100,1)  total_elapsed=2061225 nanos,  throughput=4851483 ops/sec,  per_thread_latency=412 nanos/op,  avg_arrival=206 nanos/op
hist(30,2,5000,true,0,1)  total_elapsed=6022554 nanos,  throughput=1660425 ops/sec,  per_thread_latency=1204 nanos/op,  avg_arrival=602 nanos/op
hist(30,2,5000,true,50,1)  total_elapsed=3940795 nanos,  throughput=2537559 ops/sec,  per_thread_latency=788 nanos/op,  avg_arrival=394 nanos/op
hist(30,2,5000,true,0,3)  total_elapsed=3216611 nanos,  throughput=3108862 ops/sec,  per_thread_latency=643 nanos/op,  avg_arrival=321 nanos/op
hist(30,2,5000,true,50,3)  total_elapsed=2559892 nanos,  throughput=3906414 ops/sec,  per_thread_latency=511 nanos/op,  avg_arrival=255 nanos/op
hist(30,2,5000,true,0,100)  total_elapsed=2234782 nanos,  throughput=4474709 ops/sec,  per_thread_latency=446 nanos/op,  avg_arrival=223 nanos/op
hist(30,2,5000,true,50,100)  total_elapsed=2149506 nanos,  throughput=4652231 ops/sec,  per_thread_latency=429 nanos/op,  avg_arrival=214 nanos/op
hist(30,4,2500,false,100,1)  total_elapsed=898578 nanos,  throughput=11128694 ops/sec,  per_thread_latency=359 nanos/op,  avg_arrival=89 nanos/op
hist(30,4,2500,false,0,1)  total_elapsed=3173518 nanos,  throughput=3151077 ops/sec,  per_thread_latency=1269 nanos/op,  avg_arrival=317 nanos/op
hist(30,4,2500,false,50,1)  total_elapsed=2043066 nanos,  throughput=4894604 ops/sec,  per_thread_latency=817 nanos/op,  avg_arrival=204 nanos/op
hist(30,4,2500,false,0,3)  total_elapsed=2344783 nanos,  throughput=4264786 ops/sec,  per_thread_latency=937 nanos/op,  avg_arrival=234 nanos/op
hist(30,4,2500,false,50,3)  total_elapsed=2121359 nanos,  throughput=4713959 ops/sec,  per_thread_latency=848 nanos/op,  avg_arrival=212 nanos/op
hist(30,4,2500,false,0,100)  total_elapsed=2481670 nanos,  throughput=4029544 ops/sec,  per_thread_latency=992 nanos/op,  avg_arrival=248 nanos/op
hist(30,4,2500,false,50,100)  total_elapsed=1932230 nanos,  throughput=5175367 ops/sec,  per_thread_latency=772 nanos/op,  avg_arrival=193 nanos/op
hist(30,4,2500,true,100,1)  total_elapsed=1259169 nanos,  throughput=7941745 ops/sec,  per_thread_latency=503 nanos/op,  avg_arrival=125 nanos/op
hist(30,4,2500,true,0,1)  total_elapsed=3621759 nanos,  throughput=2761089 ops/sec,  per_thread_latency=1448 nanos/op,  avg_arrival=362 nanos/op
hist(30,4,2500,true,50,1)  total_elapsed=2407359 nanos,  throughput=4153929 ops/sec,  per_thread_latency=962 nanos/op,  avg_arrival=240 nanos/op
hist(30,4,2500,true,0,3)  total_elapsed=2761176 nanos,  throughput=3621645 ops/sec,  per_thread_latency=1104 nanos/op,  avg_arrival=276 nanos/op
hist(30,4,2500,true,50,3)  total_elapsed=2573372 nanos,  throughput=3885951 ops/sec,  per_thread_latency=1029 nanos/op,  avg_arrival=257 nanos/op
hist(30,4,2500,true,0,100)  total_elapsed=3471461 nanos,  throughput=2880631 ops/sec,  per_thread_latency=1388 nanos/op,  avg_arrival=347 nanos/op
hist(30,4,2500,true,50,100)  total_elapsed=6264832 nanos,  throughput=1596211 ops/sec,  per_thread_latency=2505 nanos/op,  avg_arrival=626 nanos/op
hist(10000,1,10000,false,100,1)  total_elapsed=1601182 nanos,  throughput=6245386 ops/sec,  per_thread_latency=160 nanos/op,  avg_arrival=160 nanos/op
hist(10000,1,10000,false,0,1)  total_elapsed=17434690 nanos,  throughput=573569 ops/sec,  per_thread_latency=1743 nanos/op,  avg_arrival=1743 nanos/op
hist(10000,1,10000,false,50,1)  total_elapsed=10336580 nanos,  throughput=967437 ops/sec,  per_thread_latency=1033 nanos/op,  avg_arrival=1033 nanos/op
hist(10000,1,10000,false,0,3)  total_elapsed=7458839 nanos,  throughput=1340691 ops/sec,  per_thread_latency=745 nanos/op,  avg_arrival=745 nanos/op
hist(10000,1,10000,false,50,3)  total_elapsed=6401442 nanos,  throughput=1562148 ops/sec,  per_thread_latency=640 nanos/op,  avg_arrival=640 nanos/op
hist(10000,1,10000,false,0,100)  total_elapsed=2903513 nanos,  throughput=3444103 ops/sec,  per_thread_latency=290 nanos/op,  avg_arrival=290 nanos/op
hist(10000,1,10000,false,50,100)  total_elapsed=2866775 nanos,  throughput=3488240 ops/sec,  per_thread_latency=286 nanos/op,  avg_arrival=286 nanos/op
hist(10000,1,10000,true,100,1)  total_elapsed=1809937 nanos,  throughput=5525054 ops/sec,  per_thread_latency=180 nanos/op,  avg_arrival=180 nanos/op
hist(10000,1,10000,true,0,1)  total_elapsed=11973171 nanos,  throughput=835200 ops/sec,  per_thread_latency=1197 nanos/op,  avg_arrival=1197 nanos/op
hist(10000,1,10000,true,50,1)  total_elapsed=3797620 nanos,  throughput=2633228 ops/sec,  per_thread_latency=379 nanos/op,  avg_arrival=379 nanos/op
hist(10000,1,10000,true,0,3)  total_elapsed=3277022 nanos,  throughput=3051551 ops/sec,  per_thread_latency=327 nanos/op,  avg_arrival=327 nanos/op
hist(10000,1,10000,true,50,3)  total_elapsed=3119322 nanos,  throughput=3205824 ops/sec,  per_thread_latency=311 nanos/op,  avg_arrival=311 nanos/op
hist(10000,1,10000,true,0,100)  total_elapsed=2226470 nanos,  throughput=4491414 ops/sec,  per_thread_latency=222 nanos/op,  avg_arrival=222 nanos/op
hist(10000,1,10000,true,50,100)  total_elapsed=2224935 nanos,  throughput=4494513 ops/sec,  per_thread_latency=222 nanos/op,  avg_arrival=222 nanos/op
hist(10000,2,5000,false,100,1)  total_elapsed=766369 nanos,  throughput=13048544 ops/sec,  per_thread_latency=153 nanos/op,  avg_arrival=76 nanos/op
hist(10000,2,5000,false,0,1)  total_elapsed=3159759 nanos,  throughput=3164798 ops/sec,  per_thread_latency=631 nanos/op,  avg_arrival=315 nanos/op
hist(10000,2,5000,false,50,1)  total_elapsed=2072121 nanos,  throughput=4825973 ops/sec,  per_thread_latency=414 nanos/op,  avg_arrival=207 nanos/op
hist(10000,2,5000,false,0,3)  total_elapsed=1957511 nanos,  throughput=5108528 ops/sec,  per_thread_latency=391 nanos/op,  avg_arrival=195 nanos/op
hist(10000,2,5000,false,50,3)  total_elapsed=1674026 nanos,  throughput=5973622 ops/sec,  per_thread_latency=334 nanos/op,  avg_arrival=167 nanos/op
hist(10000,2,5000,false,0,100)  total_elapsed=1924197 nanos,  throughput=5196973 ops/sec,  per_thread_latency=384 nanos/op,  avg_arrival=192 nanos/op
hist(10000,2,5000,false,50,100)  total_elapsed=1808400 nanos,  throughput=5529750 ops/sec,  per_thread_latency=361 nanos/op,  avg_arrival=180 nanos/op
hist(10000,2,5000,true,100,1)  total_elapsed=1111804 nanos,  throughput=8994391 ops/sec,  per_thread_latency=222 nanos/op,  avg_arrival=111 nanos/op
hist(10000,2,5000,true,0,1)  total_elapsed=22125719 nanos,  throughput=451962 ops/sec,  per_thread_latency=4425 nanos/op,  avg_arrival=2212 nanos/op
hist(10000,2,5000,true,50,1)  total_elapsed=3500305 nanos,  throughput=2856893 ops/sec,  per_thread_latency=700 nanos/op,  avg_arrival=350 nanos/op
hist(10000,2,5000,true,0,3)  total_elapsed=3305867 nanos,  throughput=3024925 ops/sec,  per_thread_latency=661 nanos/op,  avg_arrival=330 nanos/op
hist(10000,2,5000,true,50,3)  total_elapsed=2291912 nanos,  throughput=4363169 ops/sec,  per_thread_latency=458 nanos/op,  avg_arrival=229 nanos/op
hist(10000,2,5000,true,0,100)  total_elapsed=3633632 nanos,  throughput=2752067 ops/sec,  per_thread_latency=726 nanos/op,  avg_arrival=363 nanos/op
hist(10000,2,5000,true,50,100)  total_elapsed=3894489 nanos,  throughput=2567730 ops/sec,  per_thread_latency=778 nanos/op,  avg_arrival=389 nanos/op
hist(10000,4,2500,false,100,1)  total_elapsed=764273 nanos,  throughput=13084329 ops/sec,  per_thread_latency=305 nanos/op,  avg_arrival=76 nanos/op
hist(10000,4,2500,false,0,1)  total_elapsed=3101233 nanos,  throughput=3224523 ops/sec,  per_thread_latency=1240 nanos/op,  avg_arrival=310 nanos/op
hist(10000,4,2500,false,50,1)  total_elapsed=2853857 nanos,  throughput=3504029 ops/sec,  per_thread_latency=1141 nanos/op,  avg_arrival=285 nanos/op
hist(10000,4,2500,false,0,3)  total_elapsed=2646565 nanos,  throughput=3778482 ops/sec,  per_thread_latency=1058 nanos/op,  avg_arrival=264 nanos/op
hist(10000,4,2500,false,50,3)  total_elapsed=2624498 nanos,  throughput=3810252 ops/sec,  per_thread_latency=1049 nanos/op,  avg_arrival=262 nanos/op
hist(10000,4,2500,false,0,100)  total_elapsed=2182121 nanos,  throughput=4582697 ops/sec,  per_thread_latency=872 nanos/op,  avg_arrival=218 nanos/op
hist(10000,4,2500,false,50,100)  total_elapsed=2254060 nanos,  throughput=4436439 ops/sec,  per_thread_latency=901 nanos/op,  avg_arrival=225 nanos/op
hist(10000,4,2500,true,100,1)  total_elapsed=1108102 nanos,  throughput=9024439 ops/sec,  per_thread_latency=443 nanos/op,  avg_arrival=110 nanos/op
hist(10000,4,2500,true,0,1)  total_elapsed=3317810 nanos,  throughput=3014036 ops/sec,  per_thread_latency=1327 nanos/op,  avg_arrival=331 nanos/op
hist(10000,4,2500,true,50,1)  total_elapsed=2965321 nanos,  throughput=3372316 ops/sec,  per_thread_latency=1186 nanos/op,  avg_arrival=296 nanos/op
hist(10000,4,2500,true,0,3)  total_elapsed=2575537 nanos,  throughput=3882685 ops/sec,  per_thread_latency=1030 nanos/op,  avg_arrival=257 nanos/op
hist(10000,4,2500,true,50,3)  total_elapsed=2698318 nanos,  throughput=3706012 ops/sec,  per_thread_latency=1079 nanos/op,  avg_arrival=269 nanos/op
hist(10000,4,2500,true,0,100)  total_elapsed=4385334 nanos,  throughput=2280328 ops/sec,  per_thread_latency=1754 nanos/op,  avg_arrival=438 nanos/op
hist(10000,4,2500,true,50,100)  total_elapsed=3310825 nanos,  throughput=3020395 ops/sec,  per_thread_latency=1324 nanos/op,  avg_arrival=331 nanos/op
hist(1,1,1000000,false,100,1)  total_elapsed=177623507 nanos,  throughput=5629885 ops/sec,  per_thread_latency=177 nanos/op,  avg_arrival=177 nanos/op
hist(1,1,1000000,false,0,1)  total_elapsed=501222692 nanos,  throughput=1995121 ops/sec,  per_thread_latency=501 nanos/op,  avg_arrival=501 nanos/op
hist(1,1,1000000,false,50,1)  total_elapsed=364478249 nanos,  throughput=2743647 ops/sec,  per_thread_latency=364 nanos/op,  avg_arrival=364 nanos/op
hist(1,1,1000000,false,0,3)  total_elapsed=218386183 nanos,  throughput=4579044 ops/sec,  per_thread_latency=218 nanos/op,  avg_arrival=218 nanos/op
hist(1,1,1000000,false,50,3)  total_elapsed=234238100 nanos,  throughput=4269160 ops/sec,  per_thread_latency=234 nanos/op,  avg_arrival=234 nanos/op
hist(1,1,1000000,false,0,100)  total_elapsed=78974128 nanos,  throughput=12662374 ops/sec,  per_thread_latency=78 nanos/op,  avg_arrival=78 nanos/op
hist(1,1,1000000,false,50,100)  total_elapsed=81073678 nanos,  throughput=12334459 ops/sec,  per_thread_latency=81 nanos/op,  avg_arrival=81 nanos/op
hist(1,1,1000000,true,100,1)  total_elapsed=206437711 nanos,  throughput=4844076 ops/sec,  per_thread_latency=206 nanos/op,  avg_arrival=206 nanos/op
hist(1,1,1000000,true,0,1)  total_elapsed=616632769 nanos,  throughput=1621710 ops/sec,  per_thread_latency=616 nanos/op,  avg_arrival=616 nanos/op
hist(1,1,1000000,true,50,1)  total_elapsed=412090396 nanos,  throughput=2426652 ops/sec,  per_thread_latency=412 nanos/op,  avg_arrival=412 nanos/op
hist(1,1,1000000,true,0,3)  total_elapsed=249496819 nanos,  throughput=4008067 ops/sec,  per_thread_latency=249 nanos/op,  avg_arrival=249 nanos/op
hist(1,1,1000000,true,50,3)  total_elapsed=268059027 nanos,  throughput=3730521 ops/sec,  per_thread_latency=268 nanos/op,  avg_arrival=268 nanos/op
hist(1,1,1000000,true,0,100)  total_elapsed=90385086 nanos,  throughput=11063772 ops/sec,  per_thread_latency=90 nanos/op,  avg_arrival=90 nanos/op
hist(1,1,1000000,true,50,100)  total_elapsed=91809499 nanos,  throughput=10892119 ops/sec,  per_thread_latency=91 nanos/op,  avg_arrival=91 nanos/op
hist(1,2,500000,false,100,1)  total_elapsed=220609511 nanos,  throughput=4532896 ops/sec,  per_thread_latency=441 nanos/op,  avg_arrival=220 nanos/op
hist(1,2,500000,false,0,1)  total_elapsed=453195562 nanos,  throughput=2206552 ops/sec,  per_thread_latency=906 nanos/op,  avg_arrival=453 nanos/op
hist(1,2,500000,false,50,1)  total_elapsed=539161314 nanos,  throughput=1854732 ops/sec,  per_thread_latency=1078 nanos/op,  avg_arrival=539 nanos/op
hist(1,2,500000,false,0,3)  total_elapsed=272653504 nanos,  throughput=3667658 ops/sec,  per_thread_latency=545 nanos/op,  avg_arrival=272 nanos/op
hist(1,2,500000,false,50,3)  total_elapsed=447491142 nanos,  throughput=2234681 ops/sec,  per_thread_latency=894 nanos/op,  avg_arrival=447 nanos/op
hist(1,2,500000,false,0,100)  total_elapsed=107834478 nanos,  throughput=9273471 ops/sec,  per_thread_latency=215 nanos/op,  avg_arrival=107 nanos/op
hist(1,2,500000,false,50,100)  total_elapsed=123638701 nanos,  throughput=8088082 ops/sec,  per_thread_latency=247 nanos/op,  avg_arrival=123 nanos/op
hist(1,2,500000,true,100,1)  total_elapsed=297169196 nanos,  throughput=3365086 ops/sec,  per_thread_latency=594 nanos/op,  avg_arrival=297 nanos/op
hist(1,2,500000,true,0,1)  total_elapsed=669820764 nanos,  throughput=1492936 ops/sec,  per_thread_latency=1339 nanos/op,  avg_arrival=669 nanos/op
hist(1,2,500000,true,50,1)  total_elapsed=609344544 nanos,  throughput=1641107 ops/sec,  per_thread_latency=1218 nanos/op,  avg_arrival=609 nanos/op
hist(1,2,500000,true,0,3)  total_elapsed=327772061 nanos,  throughput=3050900 ops/sec,  per_thread_latency=655 nanos/op,  avg_arrival=327 nanos/op
hist(1,2,500000,true,50,3)  total_elapsed=374061937 nanos,  throughput=2673354 ops/sec,  per_thread_latency=748 nanos/op,  avg_arrival=374 nanos/op
hist(1,2,500000,true,0,100)  total_elapsed=125511939 nanos,  throughput=7967369 ops/sec,  per_thread_latency=251 nanos/op,  avg_arrival=125 nanos/op
hist(1,2,500000,true,50,100)  total_elapsed=125288352 nanos,  throughput=7981587 ops/sec,  per_thread_latency=250 nanos/op,  avg_arrival=125 nanos/op
hist(1,4,250000,false,100,1)  total_elapsed=215258433 nanos,  throughput=4645578 ops/sec,  per_thread_latency=861 nanos/op,  avg_arrival=215 nanos/op
hist(1,4,250000,false,0,1)  total_elapsed=441422162 nanos,  throughput=2265405 ops/sec,  per_thread_latency=1765 nanos/op,  avg_arrival=441 nanos/op
hist(1,4,250000,false,50,1)  total_elapsed=496882539 nanos,  throughput=2012548 ops/sec,  per_thread_latency=1987 nanos/op,  avg_arrival=496 nanos/op
hist(1,4,250000,false,0,3)  total_elapsed=288386743 nanos,  throughput=3467565 ops/sec,  per_thread_latency=1153 nanos/op,  avg_arrival=288 nanos/op
hist(1,4,250000,false,50,3)  total_elapsed=319264883 nanos,  throughput=3132195 ops/sec,  per_thread_latency=1277 nanos/op,  avg_arrival=319 nanos/op
hist(1,4,250000,false,0,100)  total_elapsed=134992402 nanos,  throughput=7407824 ops/sec,  per_thread_latency=539 nanos/op,  avg_arrival=134 nanos/op
hist(1,4,250000,false,50,100)  total_elapsed=138371650 nanos,  throughput=7226913 ops/sec,  per_thread_latency=553 nanos/op,  avg_arrival=138 nanos/op
hist(1,4,250000,true,100,1)  total_elapsed=236792796 nanos,  throughput=4223101 ops/sec,  per_thread_latency=947 nanos/op,  avg_arrival=236 nanos/op
hist(1,4,250000,true,0,1)  total_elapsed=703246314 nanos,  throughput=1421976 ops/sec,  per_thread_latency=2812 nanos/op,  avg_arrival=703 nanos/op
hist(1,4,250000,true,50,1)  total_elapsed=595525181 nanos,  throughput=1679190 ops/sec,  per_thread_latency=2382 nanos/op,  avg_arrival=595 nanos/op
hist(1,4,250000,true,0,3)  total_elapsed=323706601 nanos,  throughput=3089217 ops/sec,  per_thread_latency=1294 nanos/op,  avg_arrival=323 nanos/op
hist(1,4,250000,true,50,3)  total_elapsed=358955054 nanos,  throughput=2785864 ops/sec,  per_thread_latency=1435 nanos/op,  avg_arrival=358 nanos/op
hist(1,4,250000,true,0,100)  total_elapsed=166182892 nanos,  throughput=6017466 ops/sec,  per_thread_latency=664 nanos/op,  avg_arrival=166 nanos/op
hist(1,4,250000,true,50,100)  total_elapsed=154352035 nanos,  throughput=6478696 ops/sec,  per_thread_latency=617 nanos/op,  avg_arrival=154 nanos/op
hist(30,1,1000000,false,100,1)  total_elapsed=174314952 nanos,  throughput=5736742 ops/sec,  per_thread_latency=174 nanos/op,  avg_arrival=174 nanos/op
hist(30,1,1000000,false,0,1)  total_elapsed=557523908 nanos,  throughput=1793645 ops/sec,  per_thread_latency=557 nanos/op,  avg_arrival=557 nanos/op
hist(30,1,1000000,false,50,1)  total_elapsed=355229499 nanos,  throughput=2815081 ops/sec,  per_thread_latency=355 nanos/op,  avg_arrival=355 nanos/op
hist(30,1,1000000,false,0,3)  total_elapsed=290756801 nanos,  throughput=3439300 ops/sec,  per_thread_latency=290 nanos/op,  avg_arrival=290 nanos/op
hist(30,1,1000000,false,50,3)  total_elapsed=270526631 nanos,  throughput=3696493 ops/sec,  per_thread_latency=270 nanos/op,  avg_arrival=270 nanos/op
hist(30,1,1000000,false,0,100)  total_elapsed=124771404 nanos,  throughput=8014656 ops/sec,  per_thread_latency=124 nanos/op,  avg_arrival=124 nanos/op
hist(30,1,1000000,false,50,100)  total_elapsed=122405234 nanos,  throughput=8169585 ops/sec,  per_thread_latency=122 nanos/op,  avg_arrival=122 nanos/op
hist(30,1,1000000,true,100,1)  total_elapsed=217373096 nanos,  throughput=4600385 ops/sec,  per_thread_latency=217 nanos/op,  avg_arrival=217 nanos/op
hist(30,1,1000000,true,0,1)  total_elapsed=599280041 nanos,  throughput=1668668 ops/sec,  per_thread_latency=599 nanos/op,  avg_arrival=599 nanos/op
hist(30,1,1000000,true,50,1)  total_elapsed=392873463 nanos,  throughput=2545348 ops/sec,  per_thread_latency=392 nanos/op,  avg_arrival=392 nanos/op
hist(30,1,1000000,true,0,3)  total_elapsed=356818642 nanos,  throughput=2802544 ops/sec,  per_thread_latency=356 nanos/op,  avg_arrival=356 nanos/op
hist(30,1,1000000,true,50,3)  total_elapsed=336099654 nanos,  throughput=2975308 ops/sec,  per_thread_latency=336 nanos/op,  avg_arrival=336 nanos/op
hist(30,1,1000000,true,0,100)  total_elapsed=150795018 nanos,  throughput=6631518 ops/sec,  per_thread_latency=150 nanos/op,  avg_arrival=150 nanos/op
hist(30,1,1000000,true,50,100)  total_elapsed=167628285 nanos,  throughput=5965580 ops/sec,  per_thread_latency=167 nanos/op,  avg_arrival=167 nanos/op
hist(30,2,500000,false,100,1)  total_elapsed=93452449 nanos,  throughput=10700629 ops/sec,  per_thread_latency=186 nanos/op,  avg_arrival=93 nanos/op
hist(30,2,500000,false,0,1)  total_elapsed=343735855 nanos,  throughput=2909210 ops/sec,  per_thread_latency=687 nanos/op,  avg_arrival=343 nanos/op
hist(30,2,500000,false,50,1)  total_elapsed=219449755 nanos,  throughput=4556851 ops/sec,  per_thread_latency=438 nanos/op,  avg_arrival=219 nanos/op
hist(30,2,500000,false,0,3)  total_elapsed=194645080 nanos,  throughput=5137556 ops/sec,  per_thread_latency=389 nanos/op,  avg_arrival=194 nanos/op
hist(30,2,500000,false,50,3)  total_elapsed=178230113 nanos,  throughput=5610724 ops/sec,  per_thread_latency=356 nanos/op,  avg_arrival=178 nanos/op
hist(30,2,500000,false,0,100)  total_elapsed=192327206 nanos,  throughput=5199472 ops/sec,  per_thread_latency=384 nanos/op,  avg_arrival=192 nanos/op
hist(30,2,500000,false,50,100)  total_elapsed=233246364 nanos,  throughput=4287312 ops/sec,  per_thread_latency=466 nanos/op,  avg_arrival=233 nanos/op
hist(30,2,500000,true,100,1)  total_elapsed=132646518 nanos,  throughput=7538833 ops/sec,  per_thread_latency=265 nanos/op,  avg_arrival=132 nanos/op
hist(30,2,500000,true,0,1)  total_elapsed=368543828 nanos,  throughput=2713381 ops/sec,  per_thread_latency=737 nanos/op,  avg_arrival=368 nanos/op
hist(30,2,500000,true,50,1)  total_elapsed=256896412 nanos,  throughput=3892619 ops/sec,  per_thread_latency=513 nanos/op,  avg_arrival=256 nanos/op
hist(30,2,500000,true,0,3)  total_elapsed=275758171 nanos,  throughput=3626365 ops/sec,  per_thread_latency=551 nanos/op,  avg_arrival=275 nanos/op
hist(30,2,500000,true,50,3)  total_elapsed=225255335 nanos,  throughput=4439406 ops/sec,  per_thread_latency=450 nanos/op,  avg_arrival=225 nanos/op
hist(30,2,500000,true,0,100)  total_elapsed=251868636 nanos,  throughput=3970323 ops/sec,  per_thread_latency=503 nanos/op,  avg_arrival=251 nanos/op
hist(30,2,500000,true,50,100)  total_elapsed=427121977 nanos,  throughput=2341251 ops/sec,  per_thread_latency=854 nanos/op,  avg_arrival=427 nanos/op
hist(30,4,250000,false,100,1)  total_elapsed=95186877 nanos,  throughput=10505649 ops/sec,  per_thread_latency=380 nanos/op,  avg_arrival=95 nanos/op
hist(30,4,250000,false,0,1)  total_elapsed=328113879 nanos,  throughput=3047722 ops/sec,  per_thread_latency=1312 nanos/op,  avg_arrival=328 nanos/op
hist(30,4,250000,false,50,1)  total_elapsed=209899364 nanos,  throughput=4764187 ops/sec,  per_thread_latency=839 nanos/op,  avg_arrival=209 nanos/op
hist(30,4,250000,false,0,3)  total_elapsed=192971769 nanos,  throughput=5182105 ops/sec,  per_thread_latency=771 nanos/op,  avg_arrival=192 nanos/op
hist(30,4,250000,false,50,3)  total_elapsed=190955716 nanos,  throughput=5236816 ops/sec,  per_thread_latency=763 nanos/op,  avg_arrival=190 nanos/op
hist(30,4,250000,false,0,100)  total_elapsed=213667663 nanos,  throughput=4680165 ops/sec,  per_thread_latency=854 nanos/op,  avg_arrival=213 nanos/op
hist(30,4,250000,false,50,100)  total_elapsed=212025572 nanos,  throughput=4716412 ops/sec,  per_thread_latency=848 nanos/op,  avg_arrival=212 nanos/op
hist(30,4,250000,true,100,1)  total_elapsed=150844167 nanos,  throughput=6629358 ops/sec,  per_thread_latency=603 nanos/op,  avg_arrival=150 nanos/op
hist(30,4,250000,true,0,1)  total_elapsed=382981540 nanos,  throughput=2611091 ops/sec,  per_thread_latency=1531 nanos/op,  avg_arrival=382 nanos/op
hist(30,4,250000,true,50,1)  total_elapsed=225716407 nanos,  throughput=4430338 ops/sec,  per_thread_latency=902 nanos/op,  avg_arrival=225 nanos/op
hist(30,4,250000,true,0,3)  total_elapsed=261066446 nanos,  throughput=3830442 ops/sec,  per_thread_latency=1044 nanos/op,  avg_arrival=261 nanos/op
hist(30,4,250000,true,50,3)  total_elapsed=245671807 nanos,  throughput=4070471 ops/sec,  per_thread_latency=982 nanos/op,  avg_arrival=245 nanos/op
hist(30,4,250000,true,0,100)  total_elapsed=255642503 nanos,  throughput=3911712 ops/sec,  per_thread_latency=1022 nanos/op,  avg_arrival=255 nanos/op
hist(30,4,250000,true,50,100)  total_elapsed=254220656 nanos,  throughput=3933590 ops/sec,  per_thread_latency=1016 nanos/op,  avg_arrival=254 nanos/op
hist(10000,1,1000000,false,100,1)  total_elapsed=154565890 nanos,  throughput=6469732 ops/sec,  per_thread_latency=154 nanos/op,  avg_arrival=154 nanos/op
hist(10000,1,1000000,false,0,1)  total_elapsed=516567157 nanos,  throughput=1935856 ops/sec,  per_thread_latency=516 nanos/op,  avg_arrival=516 nanos/op
hist(10000,1,1000000,false,50,1)  total_elapsed=347663899 nanos,  throughput=2876341 ops/sec,  per_thread_latency=347 nanos/op,  avg_arrival=347 nanos/op
hist(10000,1,1000000,false,0,3)  total_elapsed=286403472 nanos,  throughput=3491577 ops/sec,  per_thread_latency=286 nanos/op,  avg_arrival=286 nanos/op
hist(10000,1,1000000,false,50,3)  total_elapsed=254384640 nanos,  throughput=3931054 ops/sec,  per_thread_latency=254 nanos/op,  avg_arrival=254 nanos/op
hist(10000,1,1000000,false,0,100)  total_elapsed=208870284 nanos,  throughput=4787660 ops/sec,  per_thread_latency=208 nanos/op,  avg_arrival=208 nanos/op
hist(10000,1,1000000,false,50,100)  total_elapsed=207803228 nanos,  throughput=4812244 ops/sec,  per_thread_latency=207 nanos/op,  avg_arrival=207 nanos/op
hist(10000,1,1000000,true,100,1)  total_elapsed=170174788 nanos,  throughput=5876311 ops/sec,  per_thread_latency=170 nanos/op,  avg_arrival=170 nanos/op
hist(10000,1,1000000,true,0,1)  total_elapsed=570669779 nanos,  throughput=1752326 ops/sec,  per_thread_latency=570 nanos/op,  avg_arrival=570 nanos/op
hist(10000,1,1000000,true,50,1)  total_elapsed=417478922 nanos,  throughput=2395330 ops/sec,  per_thread_latency=417 nanos/op,  avg_arrival=417 nanos/op
hist(10000,1,1000000,true,0,3)  total_elapsed=332858872 nanos,  throughput=3004276 ops/sec,  per_thread_latency=332 nanos/op,  avg_arrival=332 nanos/op
hist(10000,1,1000000,true,50,3)  total_elapsed=302177893 nanos,  throughput=3309308 ops/sec,  per_thread_latency=302 nanos/op,  avg_arrival=302 nanos/op
hist(10000,1,1000000,true,0,100)  total_elapsed=221368150 nanos,  throughput=4517361 ops/sec,  per_thread_latency=221 nanos/op,  avg_arrival=221 nanos/op
hist(10000,1,1000000,true,50,100)  total_elapsed=239094169 nanos,  throughput=4182452 ops/sec,  per_thread_latency=239 nanos/op,  avg_arrival=239 nanos/op
hist(10000,2,500000,false,100,1)  total_elapsed=71993031 nanos,  throughput=13890233 ops/sec,  per_thread_latency=143 nanos/op,  avg_arrival=71 nanos/op
hist(10000,2,500000,false,0,1)  total_elapsed=283463754 nanos,  throughput=3527787 ops/sec,  per_thread_latency=566 nanos/op,  avg_arrival=283 nanos/op
hist(10000,2,500000,false,50,1)  total_elapsed=196115314 nanos,  throughput=5099040 ops/sec,  per_thread_latency=392 nanos/op,  avg_arrival=196 nanos/op
hist(10000,2,500000,false,0,3)  total_elapsed=157676736 nanos,  throughput=6342089 ops/sec,  per_thread_latency=315 nanos/op,  avg_arrival=157 nanos/op
hist(10000,2,500000,false,50,3)  total_elapsed=137454495 nanos,  throughput=7275134 ops/sec,  per_thread_latency=274 nanos/op,  avg_arrival=137 nanos/op
hist(10000,2,500000,false,0,100)  total_elapsed=174195554 nanos,  throughput=5740674 ops/sec,  per_thread_latency=348 nanos/op,  avg_arrival=174 nanos/op
hist(10000,2,500000,false,50,100)  total_elapsed=180238615 nanos,  throughput=5548200 ops/sec,  per_thread_latency=360 nanos/op,  avg_arrival=180 nanos/op
hist(10000,2,500000,true,100,1)  total_elapsed=121457348 nanos,  throughput=8233342 ops/sec,  per_thread_latency=242 nanos/op,  avg_arrival=121 nanos/op
hist(10000,2,500000,true,0,1)  total_elapsed=318642738 nanos,  throughput=3138310 ops/sec,  per_thread_latency=637 nanos/op,  avg_arrival=318 nanos/op
hist(10000,2,500000,true,50,1)  total_elapsed=232076736 nanos,  throughput=4308919 ops/sec,  per_thread_latency=464 nanos/op,  avg_arrival=232 nanos/op
hist(10000,2,500000,true,0,3)  total_elapsed=231033758 nanos,  throughput=4328371 ops/sec,  per_thread_latency=462 nanos/op,  avg_arrival=231 nanos/op
hist(10000,2,500000,true,50,3)  total_elapsed=230341807 nanos,  throughput=4341374 ops/sec,  per_thread_latency=460 nanos/op,  avg_arrival=230 nanos/op
hist(10000,2,500000,true,0,100)  total_elapsed=370155374 nanos,  throughput=2701568 ops/sec,  per_thread_latency=740 nanos/op,  avg_arrival=370 nanos/op
hist(10000,2,500000,true,50,100)  total_elapsed=462422053 nanos,  throughput=2162526 ops/sec,  per_thread_latency=924 nanos/op,  avg_arrival=462 nanos/op
hist(10000,4,250000,false,100,1)  total_elapsed=70320897 nanos,  throughput=14220523 ops/sec,  per_thread_latency=281 nanos/op,  avg_arrival=70 nanos/op
hist(10000,4,250000,false,0,1)  total_elapsed=324519402 nanos,  throughput=3081479 ops/sec,  per_thread_latency=1298 nanos/op,  avg_arrival=324 nanos/op
hist(10000,4,250000,false,50,1)  total_elapsed=174807710 nanos,  throughput=5720571 ops/sec,  per_thread_latency=699 nanos/op,  avg_arrival=174 nanos/op
hist(10000,4,250000,false,0,3)  total_elapsed=155128461 nanos,  throughput=6446270 ops/sec,  per_thread_latency=620 nanos/op,  avg_arrival=155 nanos/op
hist(10000,4,250000,false,50,3)  total_elapsed=156714145 nanos,  throughput=6381044 ops/sec,  per_thread_latency=626 nanos/op,  avg_arrival=156 nanos/op
hist(10000,4,250000,false,0,100)  total_elapsed=195110214 nanos,  throughput=5125308 ops/sec,  per_thread_latency=780 nanos/op,  avg_arrival=195 nanos/op
hist(10000,4,250000,false,50,100)  total_elapsed=192692388 nanos,  throughput=5189618 ops/sec,  per_thread_latency=770 nanos/op,  avg_arrival=192 nanos/op
hist(10000,4,250000,true,100,1)  total_elapsed=102231566 nanos,  throughput=9781714 ops/sec,  per_thread_latency=408 nanos/op,  avg_arrival=102 nanos/op
hist(10000,4,250000,true,0,1)  total_elapsed=347496219 nanos,  throughput=2877729 ops/sec,  per_thread_latency=1389 nanos/op,  avg_arrival=347 nanos/op
hist(10000,4,250000,true,50,1)  total_elapsed=213135183 nanos,  throughput=4691857 ops/sec,  per_thread_latency=852 nanos/op,  avg_arrival=213 nanos/op
hist(10000,4,250000,true,0,3)  total_elapsed=246870305 nanos,  throughput=4050709 ops/sec,  per_thread_latency=987 nanos/op,  avg_arrival=246 nanos/op
hist(10000,4,250000,true,50,3)  total_elapsed=211186472 nanos,  throughput=4735151 ops/sec,  per_thread_latency=844 nanos/op,  avg_arrival=211 nanos/op
hist(10000,4,250000,true,0,100)  total_elapsed=303382031 nanos,  throughput=3296174 ops/sec,  per_thread_latency=1213 nanos/op,  avg_arrival=303 nanos/op
hist(10000,4,250000,true,50,100)  total_elapsed=335253513 nanos,  throughput=2982817 ops/sec,  per_thread_latency=1341 nanos/op,  avg_arrival=335 nanos/op
uncontended R+W txn: best was 544.7 nanos/txn
ticket(1,2,100000) took 1104 millis total
ticket(1,3,100000) took 3374 millis total
ticket(1,100,1000) took 2411 millis total
ticket(50,2,1000) took 271 millis total
ticket(2,5,10000) took 202 millis total
tokenRing(3,10000,false)  total_elapsed=143 msec,  throughput=209790 handoffs/sec,  latency=4766 nanos/handoff
tokenRing(3,1000,true)  total_elapsed=102 msec,  throughput=29411 handoffs/sec,  latency=34000 nanos/handoff
tokenRing(2,1000000,false)  total_elapsed=449 msec,  throughput=4454342 handoffs/sec,  latency=224 nanos/handoff
tokenRing(3,1000000,false)  total_elapsed=2368 msec,  throughput=1266891 handoffs/sec,  latency=789 nanos/handoff
tokenRing(32,10000,false)  total_elapsed=2656 msec,  throughput=120481 handoffs/sec,  latency=8300 nanos/handoff
tokenRing(2,100000,true)  total_elapsed=1039 msec,  throughput=192492 handoffs/sec,  latency=5195 nanos/handoff
tokenRing(3,100000,true)  total_elapsed=5923 msec,  throughput=50650 handoffs/sec,  latency=19743 nanos/handoff
tokenRing(32,10000,true)  total_elapsed=6554 msec,  throughput=48825 handoffs/sec,  latency=20481 nanos/handoff
writeSkew(2000): 23 millis total
writeSkew(2000000): 1409 millis total
Config(3,50,50,4,2048,0.5,0,<function0>)
computing sequentially...
computing in parallel with transactions...
Config(3,50,50,2,2048,0.5,0,<function0>)
computing sequentially...
computing in parallel with transactions...
Config(3,50,50,2,2048,0.5,0,<function0>)
computing sequentially...
computing in parallel with transactions...
Config(3,100,100,4,4096,0.5,0,<function0>)
computing sequentially...
computing in parallel with transactions...
Config(3,100,100,4,4096,0.5,0,<function0>)
computing sequentially...
computing in parallel with transactions...
Config(3,100,100,4,4096,0.5,0,<function0>)
computing sequentially...
computing in parallel with transactions...
Config(3,100,100,4,4096,0.5,28568483368165,<function0>)
computing sequentially...
computing in parallel with transactions...
readHit(0): 0.0 nanos
readMiss(0): 10.6 nanos
writeHit(0): 0.0 nanos
readHit(1): 20.5 nanos
readMiss(1): 10.6 nanos
writeHit(1): 44.1 nanos
readHit(2): 21.1 nanos
readMiss(2): 10.6 nanos
writeHit(2): 45.0 nanos
readHit(3): 23.5 nanos
readMiss(3): 10.8 nanos
writeHit(3): 48.0 nanos
readHit(4): 21.1 nanos
readMiss(4): 13.4 nanos
writeHit(4): 42.8 nanos
readHit(5): 30.6 nanos
readMiss(5): 10.7 nanos
writeHit(5): 45.1 nanos
readHit(6): 26.5 nanos
readMiss(6): 12.4 nanos
writeHit(6): 42.8 nanos
readHit(7): 22.3 nanos
readMiss(7): 18.2 nanos
writeHit(7): 55.9 nanos
readHit(8): 21.7 nanos
readMiss(8): 15.8 nanos
writeHit(8): 45.2 nanos
readHit(10): 29.0 nanos
readMiss(10): 19.5 nanos
writeHit(10): 43.9 nanos
readHit(12): 25.1 nanos
readMiss(12): 18.9 nanos
writeHit(12): 48.1 nanos
readHit(14): 21.7 nanos
readMiss(14): 16.1 nanos
writeHit(14): 48.2 nanos
readHit(16): 24.1 nanos
readMiss(16): 16.8 nanos
writeHit(16): 48.1 nanos
readHit(20): 27.7 nanos
readMiss(20): 18.4 nanos
writeHit(20): 55.3 nanos
readHit(24): 28.2 nanos
readMiss(24): 19.9 nanos
writeHit(24): 51.4 nanos
readHit(28): 24.9 nanos
readMiss(28): 18.3 nanos
writeHit(28): 46.7 nanos
readHit(32): 25.9 nanos
readMiss(32): 20.6 nanos
writeHit(32): 51.4 nanos
readHit(48): 27.6 nanos
readMiss(48): 21.0 nanos
writeHit(48): 50.8 nanos
readHit(64): 26.8 nanos
readMiss(64): 19.2 nanos
writeHit(64): 51.6 nanos
readHit(80): 27.8 nanos
readMiss(80): 22.5 nanos
writeHit(80): 50.2 nanos
readHit(96): 28.8 nanos
readMiss(96): 25.2 nanos
writeHit(96): 52.3 nanos
readHit(112): 24.8 nanos
readMiss(112): 19.2 nanos
writeHit(112): 47.8 nanos
readHit(128): 26.3 nanos
readMiss(128): 20.8 nanos
writeHit(128): 50.4 nanos
readHit(144): 26.6 nanos
readMiss(144): 21.9 nanos
writeHit(144): 50.3 nanos
readHit(160): 26.5 nanos
readMiss(160): 23.8 nanos
writeHit(160): 51.7 nanos
readHit(176): 28.0 nanos
readMiss(176): 24.1 nanos
writeHit(176): 52.1 nanos
readHit(192): 28.6 nanos
readMiss(192): 25.8 nanos
writeHit(192): 52.9 nanos
readHit(208): 26.5 nanos
readMiss(208): 19.0 nanos
writeHit(208): 48.5 nanos
readHit(224): 27.9 nanos
readMiss(224): 21.7 nanos
writeHit(224): 49.7 nanos
readHit(240): 27.3 nanos
readMiss(240): 22.4 nanos
writeHit(240): 50.2 nanos
readHit(256): 28.0 nanos
readMiss(256): 23.6 nanos
writeHit(256): 50.7 nanos
TAnyRefFactory: FreshEscaped: transform(_+1): best was 167.6 nanos/call
TAnyRefFactory: FreshEscaped: x:=!x+1: best was 146.7 nanos/call
TAnyRefFactory: FreshEscaped: x+=1: best was 167.6 nanos/call
TAnyRefFactory: FreshSingleNonTxn: transform(_+1): best was 174.6 nanos/call
TAnyRefFactory: FreshSingleNonTxn: x:=!x+1: best was 188.5 nanos/call
TAnyRefFactory: FreshSingleNonTxn: x+=1: best was 202.5 nanos/call
TAnyRefFactory: FreshSingleTxn(1): transform(_+1): best was 530.8 nanos/call
TAnyRefFactory: FreshSingleTxn(1): x:=!x+1: best was 873.0 nanos/call
TAnyRefFactory: FreshSingleTxn(1): x+=1: best was 565.7 nanos/call
TAnyRefFactory: FreshTxn(1): transform(_+1): best was 509.8 nanos/call
TAnyRefFactory: FreshTxn(1): x:=!x+1: best was 852.0 nanos/call
TAnyRefFactory: FreshTxn(1): x+=1: best was 565.8 nanos/call
TAnyRefFactory: FreshSingleTxn(2): transform(_+1): best was 342.2 nanos/call
TAnyRefFactory: FreshSingleTxn(2): x:=!x+1: best was 600.6 nanos/call
TAnyRefFactory: FreshSingleTxn(2): x+=1: best was 377.1 nanos/call
TAnyRefFactory: FreshTxn(2): transform(_+1): best was 314.2 nanos/call
TAnyRefFactory: FreshTxn(2): x:=!x+1: best was 572.7 nanos/call
TAnyRefFactory: FreshTxn(2): x+=1: best was 356.1 nanos/call
TAnyRefFactory: FreshSingleTxn(8): transform(_+1): best was 174.6 nanos/call
TAnyRefFactory: FreshSingleTxn(8): x:=!x+1: best was 265.3 nanos/call
TAnyRefFactory: FreshSingleTxn(8): x+=1: best was 195.5 nanos/call
TAnyRefFactory: FreshTxn(8): transform(_+1): best was 160.7 nanos/call
TAnyRefFactory: FreshTxn(8): x:=!x+1: best was 237.4 nanos/call
TAnyRefFactory: FreshTxn(8): x+=1: best was 181.5 nanos/call
TAnyRefFactory: FreshSingleTxn(1000): transform(_+1): best was 125.7 nanos/call
TAnyRefFactory: FreshSingleTxn(1000): x:=!x+1: best was 167.6 nanos/call
TAnyRefFactory: FreshSingleTxn(1000): x+=1: best was 146.6 nanos/call
TAnyRefFactory: FreshTxn(1000): transform(_+1): best was 111.7 nanos/call
TAnyRefFactory: FreshTxn(1000): x:=!x+1: best was 146.6 nanos/call
TAnyRefFactory: FreshTxn(1000): x+=1: best was 132.7 nanos/call
TAnyRefFactory: ReuseEscaped: transform(_+1): best was 174.6 nanos/call
TAnyRefFactory: ReuseEscaped: x:=!x+1: best was 181.5 nanos/call
TAnyRefFactory: ReuseEscaped: x+=1: best was 181.5 nanos/call
TAnyRefFactory: ReuseSingleNonTxn: transform(_+1): best was 188.5 nanos/call
TAnyRefFactory: ReuseSingleNonTxn: x:=!x+1: best was 216.5 nanos/call
TAnyRefFactory: ReuseSingleNonTxn: x+=1: best was 230.4 nanos/call
TAnyRefFactory: ReuseSingleTxn(1): transform(_+1): best was 635.6 nanos/call
TAnyRefFactory: ReuseSingleTxn(1): x:=!x+1: best was 991.8 nanos/call
TAnyRefFactory: ReuseSingleTxn(1): x+=1: best was 649.5 nanos/call
TAnyRefFactory: ReuseTxn(1): transform(_+1): best was 586.6 nanos/call
TAnyRefFactory: ReuseTxn(1): x:=!x+1: best was 970.8 nanos/call
TAnyRefFactory: ReuseTxn(1): x+=1: best was 656.5 nanos/call
TAnyRefFactory: ReuseSingleTxn(2): transform(_+1): best was 363.2 nanos/call
TAnyRefFactory: ReuseSingleTxn(2): x:=!x+1: best was 663.4 nanos/call
TAnyRefFactory: ReuseSingleTxn(2): x+=1: best was 419.0 nanos/call
TAnyRefFactory: ReuseTxn(2): transform(_+1): best was 342.2 nanos/call
TAnyRefFactory: ReuseTxn(2): x:=!x+1: best was 649.5 nanos/call
TAnyRefFactory: ReuseTxn(2): x+=1: best was 391.1 nanos/call
TAnyRefFactory: ReuseSingleTxn(8): transform(_+1): best was 174.6 nanos/call
TAnyRefFactory: ReuseSingleTxn(8): x:=!x+1: best was 279.4 nanos/call
TAnyRefFactory: ReuseSingleTxn(8): x+=1: best was 202.5 nanos/call
TAnyRefFactory: ReuseTxn(8): transform(_+1): best was 153.6 nanos/call
TAnyRefFactory: ReuseTxn(8): x:=!x+1: best was 251.4 nanos/call
TAnyRefFactory: ReuseTxn(8): x+=1: best was 188.5 nanos/call
TAnyRefFactory: ReuseSingleTxn(1000): transform(_+1): best was 125.7 nanos/call
TAnyRefFactory: ReuseSingleTxn(1000): x:=!x+1: best was 174.6 nanos/call
TAnyRefFactory: ReuseSingleTxn(1000): x+=1: best was 153.6 nanos/call
TAnyRefFactory: ReuseTxn(1000): transform(_+1): best was 111.7 nanos/call
TAnyRefFactory: ReuseTxn(1000): x:=!x+1: best was 146.6 nanos/call
TAnyRefFactory: ReuseTxn(1000): x+=1: best was 139.6 nanos/call
TIntRefFactory: FreshEscaped: transform(_+1): best was 167.6 nanos/call
TIntRefFactory: FreshEscaped: x:=!x+1: best was 153.6 nanos/call
TIntRefFactory: FreshEscaped: x+=1: best was 118.7 nanos/call
TIntRefFactory: FreshSingleNonTxn: transform(_+1): best was 174.6 nanos/call
TIntRefFactory: FreshSingleNonTxn: x:=!x+1: best was 188.5 nanos/call
TIntRefFactory: FreshSingleNonTxn: x+=1: best was 167.6 nanos/call
TIntRefFactory: FreshSingleTxn(1): transform(_+1): best was 516.8 nanos/call
TIntRefFactory: FreshSingleTxn(1): x:=!x+1: best was 810.1 nanos/call
TIntRefFactory: FreshSingleTxn(1): x+=1: best was 530.7 nanos/call
TIntRefFactory: FreshTxn(1): transform(_+1): best was 502.8 nanos/call
TIntRefFactory: FreshTxn(1): x:=!x+1: best was 796.2 nanos/call
TIntRefFactory: FreshTxn(1): x+=1: best was 586.6 nanos/call
TIntRefFactory: FreshSingleTxn(2): transform(_+1): best was 328.2 nanos/call
TIntRefFactory: FreshSingleTxn(2): x:=!x+1: best was 593.7 nanos/call
TIntRefFactory: FreshSingleTxn(2): x+=1: best was 335.2 nanos/call
TIntRefFactory: FreshTxn(2): transform(_+1): best was 314.2 nanos/call
TIntRefFactory: FreshTxn(2): x:=!x+1: best was 600.6 nanos/call
TIntRefFactory: FreshTxn(2): x+=1: best was 335.2 nanos/call
TIntRefFactory: FreshSingleTxn(8): transform(_+1): best was 167.6 nanos/call
TIntRefFactory: FreshSingleTxn(8): x:=!x+1: best was 258.4 nanos/call
TIntRefFactory: FreshSingleTxn(8): x+=1: best was 174.6 nanos/call
TIntRefFactory: FreshTxn(8): transform(_+1): best was 153.6 nanos/call
TIntRefFactory: FreshTxn(8): x:=!x+1: best was 244.4 nanos/call
TIntRefFactory: FreshTxn(8): x+=1: best was 181.5 nanos/call
TIntRefFactory: FreshSingleTxn(1000): transform(_+1): best was 125.7 nanos/call
TIntRefFactory: FreshSingleTxn(1000): x:=!x+1: best was 167.6 nanos/call
TIntRefFactory: FreshSingleTxn(1000): x+=1: best was 132.6 nanos/call
TIntRefFactory: FreshTxn(1000): transform(_+1): best was 118.7 nanos/call
TIntRefFactory: FreshTxn(1000): x:=!x+1: best was 153.6 nanos/call
TIntRefFactory: FreshTxn(1000): x+=1: best was 139.6 nanos/call
TIntRefFactory: ReuseEscaped: transform(_+1): best was 160.6 nanos/call
TIntRefFactory: ReuseEscaped: x:=!x+1: best was 167.6 nanos/call
TIntRefFactory: ReuseEscaped: x+=1: best was 118.7 nanos/call
TIntRefFactory: ReuseSingleNonTxn: transform(_+1): best was 181.5 nanos/call
TIntRefFactory: ReuseSingleNonTxn: x:=!x+1: best was 195.5 nanos/call
TIntRefFactory: ReuseSingleNonTxn: x+=1: best was 146.7 nanos/call
TIntRefFactory: ReuseSingleTxn(1): transform(_+1): best was 614.6 nanos/call
TIntRefFactory: ReuseSingleTxn(1): x:=!x+1: best was 915.0 nanos/call
TIntRefFactory: ReuseSingleTxn(1): x+=1: best was 621.6 nanos/call
TIntRefFactory: ReuseTxn(1): transform(_+1): best was 579.7 nanos/call
TIntRefFactory: ReuseTxn(1): x:=!x+1: best was 907.9 nanos/call
TIntRefFactory: ReuseTxn(1): x+=1: best was 614.6 nanos/call
TIntRefFactory: ReuseSingleTxn(2): transform(_+1): best was 356.2 nanos/call
TIntRefFactory: ReuseSingleTxn(2): x:=!x+1: best was 663.5 nanos/call
TIntRefFactory: ReuseSingleTxn(2): x+=1: best was 363.1 nanos/call
TIntRefFactory: ReuseTxn(2): transform(_+1): best was 335.2 nanos/call
TIntRefFactory: ReuseTxn(2): x:=!x+1: best was 677.5 nanos/call
TIntRefFactory: ReuseTxn(2): x+=1: best was 363.1 nanos/call
TIntRefFactory: ReuseSingleTxn(8): transform(_+1): best was 174.6 nanos/call
TIntRefFactory: ReuseSingleTxn(8): x:=!x+1: best was 272.4 nanos/call
TIntRefFactory: ReuseSingleTxn(8): x+=1: best was 174.6 nanos/call
TIntRefFactory: ReuseTxn(8): transform(_+1): best was 153.6 nanos/call
TIntRefFactory: ReuseTxn(8): x:=!x+1: best was 244.4 nanos/call
TIntRefFactory: ReuseTxn(8): x+=1: best was 181.5 nanos/call
TIntRefFactory: ReuseSingleTxn(1000): transform(_+1): best was 125.7 nanos/call
TIntRefFactory: ReuseSingleTxn(1000): x:=!x+1: best was 181.5 nanos/call
TIntRefFactory: ReuseSingleTxn(1000): x+=1: best was 132.6 nanos/call
TIntRefFactory: ReuseTxn(1000): transform(_+1): best was 104.7 nanos/call
TIntRefFactory: ReuseTxn(1000): x:=!x+1: best was 146.6 nanos/call
TIntRefFactory: ReuseTxn(1000): x+=1: best was 132.6 nanos/call
LazyConflictRefFactory: FreshEscaped: transform(_+1): best was 167.6 nanos/call
LazyConflictRefFactory: FreshEscaped: x:=!x+1: best was 167.6 nanos/call
LazyConflictRefFactory: FreshEscaped: x+=1: best was 181.5 nanos/call
LazyConflictRefFactory: FreshSingleNonTxn: transform(_+1): best was 174.6 nanos/call
LazyConflictRefFactory: FreshSingleNonTxn: x:=!x+1: best was 195.5 nanos/call
LazyConflictRefFactory: FreshSingleNonTxn: x+=1: best was 188.5 nanos/call
LazyConflictRefFactory: FreshSingleTxn(1): transform(_+1): best was 1236.2 nanos/call
LazyConflictRefFactory: FreshSingleTxn(1): x:=!x+1: best was 1878.8 nanos/call
LazyConflictRefFactory: FreshSingleTxn(1): x+=1: best was 1424.8 nanos/call
LazyConflictRefFactory: FreshTxn(1): transform(_+1): best was 1243.2 nanos/call
LazyConflictRefFactory: FreshTxn(1): x:=!x+1: best was 1746.0 nanos/call
LazyConflictRefFactory: FreshTxn(1): x+=1: best was 1215.3 nanos/call
LazyConflictRefFactory: FreshSingleTxn(2): transform(_+1): best was 663.4 nanos/call
LazyConflictRefFactory: FreshSingleTxn(2): x:=!x+1: best was 1417.7 nanos/call
LazyConflictRefFactory: FreshSingleTxn(2): x+=1: best was 817.1 nanos/call
LazyConflictRefFactory: FreshTxn(2): transform(_+1): best was 656.5 nanos/call
LazyConflictRefFactory: FreshTxn(2): x:=!x+1: best was 1292.1 nanos/call
LazyConflictRefFactory: FreshTxn(2): x+=1: best was 670.4 nanos/call
LazyConflictRefFactory: FreshSingleTxn(8): transform(_+1): best was 230.5 nanos/call
LazyConflictRefFactory: FreshSingleTxn(8): x:=!x+1: best was 433.0 nanos/call
LazyConflictRefFactory: FreshSingleTxn(8): x+=1: best was 307.3 nanos/call
LazyConflictRefFactory: FreshTxn(8): transform(_+1): best was 216.5 nanos/call
LazyConflictRefFactory: FreshTxn(8): x:=!x+1: best was 363.2 nanos/call
LazyConflictRefFactory: FreshTxn(8): x+=1: best was 216.5 nanos/call
LazyConflictRefFactory: FreshSingleTxn(1000): transform(_+1): best was 132.7 nanos/call
LazyConflictRefFactory: FreshSingleTxn(1000): x:=!x+1: best was 181.5 nanos/call
LazyConflictRefFactory: FreshSingleTxn(1000): x+=1: best was 188.5 nanos/call
LazyConflictRefFactory: FreshTxn(1000): transform(_+1): best was 104.7 nanos/call
LazyConflictRefFactory: FreshTxn(1000): x:=!x+1: best was 139.6 nanos/call
LazyConflictRefFactory: FreshTxn(1000): x+=1: best was 111.7 nanos/call
LazyConflictRefFactory: ReuseEscaped: transform(_+1): best was 160.7 nanos/call
LazyConflictRefFactory: ReuseEscaped: x:=!x+1: best was 160.7 nanos/call
LazyConflictRefFactory: ReuseEscaped: x+=1: best was 181.5 nanos/call
LazyConflictRefFactory: ReuseSingleNonTxn: transform(_+1): best was 174.6 nanos/call
LazyConflictRefFactory: ReuseSingleNonTxn: x:=!x+1: best was 202.5 nanos/call
LazyConflictRefFactory: ReuseSingleNonTxn: x+=1: best was 202.5 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(1): transform(_+1): best was 1306.0 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(1): x:=!x+1: best was 2004.4 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(1): x+=1: best was 1501.6 nanos/call
LazyConflictRefFactory: ReuseTxn(1): transform(_+1): best was 1340.9 nanos/call
LazyConflictRefFactory: ReuseTxn(1): x:=!x+1: best was 1892.7 nanos/call
LazyConflictRefFactory: ReuseTxn(1): x+=1: best was 1257.1 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(2): transform(_+1): best was 712.4 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(2): x:=!x+1: best was 1515.5 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(2): x+=1: best was 831.1 nanos/call
LazyConflictRefFactory: ReuseTxn(2): transform(_+1): best was 712.4 nanos/call
LazyConflictRefFactory: ReuseTxn(2): x:=!x+1: best was 1452.7 nanos/call
LazyConflictRefFactory: ReuseTxn(2): x+=1: best was 712.4 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(8): transform(_+1): best was 237.4 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(8): x:=!x+1: best was 447.0 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(8): x+=1: best was 286.3 nanos/call
LazyConflictRefFactory: ReuseTxn(8): transform(_+1): best was 202.5 nanos/call
LazyConflictRefFactory: ReuseTxn(8): x:=!x+1: best was 363.1 nanos/call
LazyConflictRefFactory: ReuseTxn(8): x+=1: best was 216.5 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(1000): transform(_+1): best was 125.7 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(1000): x:=!x+1: best was 174.6 nanos/call
LazyConflictRefFactory: ReuseSingleTxn(1000): x+=1: best was 160.6 nanos/call
LazyConflictRefFactory: ReuseTxn(1000): transform(_+1): best was 83.8 nanos/call
LazyConflictRefFactory: ReuseTxn(1000): x:=!x+1: best was 104.7 nanos/call
LazyConflictRefFactory: ReuseTxn(1000): x+=1: best was 97.7 nanos/call
StripedIntRefFactory: FreshEscaped: transform(_+1): best was 1054.6 nanos/call
StripedIntRefFactory: FreshEscaped: x:=!x+1: best was 3533.9 nanos/call
StripedIntRefFactory: FreshEscaped: x+=1: best was 139.6 nanos/call
StripedIntRefFactory: FreshSingleNonTxn: transform(_+1): best was 1033.6 nanos/call
StripedIntRefFactory: FreshSingleNonTxn: x:=!x+1: best was 3436.2 nanos/call
StripedIntRefFactory: FreshSingleNonTxn: x+=1: best was 167.6 nanos/call
StripedIntRefFactory: FreshSingleTxn(1): transform(_+1): best was 1054.6 nanos/call
StripedIntRefFactory: FreshSingleTxn(1): x:=!x+1: best was 3568.9 nanos/call
StripedIntRefFactory: FreshSingleTxn(1): x+=1: best was 551.7 nanos/call
StripedIntRefFactory: FreshTxn(1): transform(_+1): best was 1033.7 nanos/call
StripedIntRefFactory: FreshTxn(1): x:=!x+1: best was 3310.5 nanos/call
StripedIntRefFactory: FreshTxn(1): x+=1: best was 551.8 nanos/call
StripedIntRefFactory: FreshSingleTxn(2): transform(_+1): best was 873.0 nanos/call
StripedIntRefFactory: FreshSingleTxn(2): x:=!x+1: best was 3394.3 nanos/call
StripedIntRefFactory: FreshSingleTxn(2): x+=1: best was 342.2 nanos/call
StripedIntRefFactory: FreshTxn(2): transform(_+1): best was 838.1 nanos/call
StripedIntRefFactory: FreshTxn(2): x:=!x+1: best was 3226.7 nanos/call
StripedIntRefFactory: FreshTxn(2): x+=1: best was 335.2 nanos/call
StripedIntRefFactory: FreshSingleTxn(8): transform(_+1): best was 663.5 nanos/call
StripedIntRefFactory: FreshSingleTxn(8): x:=!x+1: best was 1662.3 nanos/call
StripedIntRefFactory: FreshSingleTxn(8): x+=1: best was 188.5 nanos/call
StripedIntRefFactory: FreshTxn(8): transform(_+1): best was 621.5 nanos/call
StripedIntRefFactory: FreshTxn(8): x:=!x+1: best was 1599.4 nanos/call
StripedIntRefFactory: FreshTxn(8): x+=1: best was 181.6 nanos/call
StripedIntRefFactory: FreshSingleTxn(1000): transform(_+1): best was 454.0 nanos/call
StripedIntRefFactory: FreshSingleTxn(1000): x:=!x+1: best was 1208.2 nanos/call
StripedIntRefFactory: FreshSingleTxn(1000): x+=1: best was 146.6 nanos/call
StripedIntRefFactory: FreshTxn(1000): transform(_+1): best was 412.0 nanos/call
StripedIntRefFactory: FreshTxn(1000): x:=!x+1: best was 1075.5 nanos/call
StripedIntRefFactory: FreshTxn(1000): x+=1: best was 139.6 nanos/call
StripedIntRefFactory: ReuseEscaped: transform(_+1): best was 1054.6 nanos/call
StripedIntRefFactory: ReuseEscaped: x:=!x+1: best was 3485.1 nanos/call
StripedIntRefFactory: ReuseEscaped: x+=1: best was 132.7 nanos/call
StripedIntRefFactory: ReuseSingleNonTxn: transform(_+1): best was 1026.6 nanos/call
StripedIntRefFactory: ReuseSingleNonTxn: x:=!x+1: best was 3513.0 nanos/call
StripedIntRefFactory: ReuseSingleNonTxn: x+=1: best was 160.6 nanos/call
StripedIntRefFactory: ReuseSingleTxn(1): transform(_+1): best was 1131.4 nanos/call
StripedIntRefFactory: ReuseSingleTxn(1): x:=!x+1: best was 3729.5 nanos/call
StripedIntRefFactory: ReuseSingleTxn(1): x+=1: best was 614.6 nanos/call
StripedIntRefFactory: ReuseTxn(1): transform(_+1): best was 1103.4 nanos/call
StripedIntRefFactory: ReuseTxn(1): x:=!x+1: best was 3520.0 nanos/call
StripedIntRefFactory: ReuseTxn(1): x+=1: best was 614.6 nanos/call
StripedIntRefFactory: ReuseSingleTxn(2): transform(_+1): best was 907.9 nanos/call
StripedIntRefFactory: ReuseSingleTxn(2): x:=!x+1: best was 3450.2 nanos/call
StripedIntRefFactory: ReuseSingleTxn(2): x+=1: best was 370.2 nanos/call
StripedIntRefFactory: ReuseTxn(2): transform(_+1): best was 859.0 nanos/call
StripedIntRefFactory: ReuseTxn(2): x:=!x+1: best was 3436.2 nanos/call
StripedIntRefFactory: ReuseTxn(2): x+=1: best was 363.1 nanos/call
StripedIntRefFactory: ReuseSingleTxn(8): transform(_+1): best was 670.4 nanos/call
StripedIntRefFactory: ReuseSingleTxn(8): x:=!x+1: best was 1676.2 nanos/call
StripedIntRefFactory: ReuseSingleTxn(8): x+=1: best was 188.5 nanos/call
StripedIntRefFactory: ReuseTxn(8): transform(_+1): best was 635.5 nanos/call
StripedIntRefFactory: ReuseTxn(8): x:=!x+1: best was 1683.2 nanos/call
StripedIntRefFactory: ReuseTxn(8): x+=1: best was 181.6 nanos/call
StripedIntRefFactory: ReuseSingleTxn(1000): transform(_+1): best was 460.9 nanos/call
StripedIntRefFactory: ReuseSingleTxn(1000): x:=!x+1: best was 1201.3 nanos/call
StripedIntRefFactory: ReuseSingleTxn(1000): x+=1: best was 146.6 nanos/call
StripedIntRefFactory: ReuseTxn(1000): transform(_+1): best was 412.0 nanos/call
StripedIntRefFactory: ReuseTxn(1000): x:=!x+1: best was 1152.4 nanos/call
StripedIntRefFactory: ReuseTxn(1000): x+=1: best was 139.6 nanos/call
best latency (1000 assign+release pairs) was 407 nanos/pair
best latency (1000000 assign+release pairs) was 81 nanos/pair
FastSimpleRandom: best was 4.4838 nanos/call
[info] == test-finish ==
[info] Passed: : Total 2185, Failed 0, Errors 0, Passed 2184, Skipped 1
[info]  
[info] All tests PASSED.
[info] == test-finish ==
[info] 
[info] == test-cleanup ==
[info] 
[info] == test ==
[success] Successful.
[info] 
[info] Total time: 132 s, completed May 8, 2010 3:37:35 PM
[info] 
[info] Total session time: 259 s, completed May 8, 2010 3:37:35 PM
[success] Build completed successfully.
